if (typeof module !== 'undefined') {
    var nw = {};
    nw.utils = require('..');

    var expect = require('expect.js'),
        sinon = require('sinon');
}

describe('nw.utils', function () {
    describe('#capitalize', function () {
        it('should return same string with first character capitalized', function () {
            var c = nw.utils.capitalize;
            expect(c('moscow')).to.be('Moscow');
            expect(c('Moscow')).to.be('Moscow');
            expect(c('123')).to.be('123');
            expect(c('!')).to.be('!');
        });

        it('should work with non-latin characters', function () {
            var c = nw.utils.capitalize;
            expect(c('москва')).to.be('Москва');
        });
    });

    describe('#throws', function () {
        it("should throw first argument if it isn't null", function () {
            var callback = sinon.spy();
            var wrapped = nw.utils.throws(callback);
            var myErr = new Error('should throw');

            try {
                wrapped (myErr, 1, 2);
            } catch (err) {
                expect(err).to.be(myErr);
                expect(callback.called).to.not.be.ok();
            }
        });

        it('should call second argument with all other arguments', function (done) {
            var wrapped = nw.utils.throws(function (arg1, arg2) {
                expect(arg1).to.be(1);
                expect(arg2).to.be(2);
                done();
            });

            wrapped(null, 1, 2);
        });
    });
});
