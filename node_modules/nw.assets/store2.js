var _ = require('underscore'),
    async = require('async'),
    url = require('url'),
    path = require('path'),
    crypto = require('crypto'),
    Inline = require('./inline');

var explicitRegex = /\.js$|\.css$/;

module.exports = function (opts) {
    opts = _.extend({
        compile: true,
        output: null
    }, opts);

    if (!opts.output) {
        throw new Error('store output must be specified');
    }

    var store = {};
    var explicitAssets = {};
    var packages = {};

    /**
     * Add asset `asset` to the store.
     * Asset will be accessible via `url`.
     *
     * @param {String} url              url of asset
     * @param {String|Function} asset   filename/dirname of assets or function returning asset
     *                                  content
     * @api public
     */
    store.add = function (url, asset) {
        getAssetType(url, asset, function (type) {
            if (type.isDir) {
                addAssetDir(url, asset);
            } else if (!opts.compile || !type.isExplicit) {
                copyAsset(url, asset);
            } else {
                saveAsset(url, asset);
            }
        });
    };

    store.definePackage = function (name, assets) {
        packages[name] = assets;

        if (!opts.compile) {
            return;
        }

        // compile assets to package `name`
    };


    /* move to context extensions
     *
    store.getPackageIncludeTags = function (name) {
        //
    };

    store.getAssetIncludeTags = function () {
        var assets = arguments;
        //
    };

    store.templateContext = function () {
        return {
            package: _.bind(store.getPackageIncludeTags, store),
            asset: _.bind(store.getAssetIncludeTags, store)
        };
    };
    */

    function addAssetDir (baseUrl, dir) {
        if (baseUrl[baseUrl.length-1] !== '/') {
            baseUrl += '/';
        }
        if (dir([dir.length-1] !== '/') {
            dir += '/';
        }

        utils.fsFind(dir, function (entries) {
            _.each(entries, function (entry) {
                store.add(baseUrl+entry, dir+entry);
            });
        });
    }

    function copyAsset (url, asset) {
        var newPath = path.join(opts.output, url);
        utils.ensureDirExist(path.basename(newPath), function () {
            utils.copyFile(newPath, asset);
        });
    }

    function saveAsset (url, asset) {
        explicitAssets[url] = asset;
    }
};
